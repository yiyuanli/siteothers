<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on YIYUAN LI</title>
    <link>http://yiyuanli.github.io/site/post/</link>
    <description>Recent content in Posts on YIYUAN LI</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 15 Oct 2017 10:30:16 +0000</lastBuildDate>
    
	<atom:link href="http://yiyuanli.github.io/site/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>wordpress转hugo，并托管在GitHub上</title>
      <link>http://yiyuanli.github.io/site/post/wordpress-to-hugo/</link>
      <pubDate>Sun, 15 Oct 2017 10:30:16 +0000</pubDate>
      
      <guid>http://yiyuanli.github.io/site/post/wordpress-to-hugo/</guid>
      <description>在转之前我发现网上很少有介绍word press转hugo的中文文章，大多数都是 word press转hexokinase或者Jekyll。 但是由上篇文章总结来看hugo目前是 最适合静态网页生成器，故总结在此作为大家参考。
wordpress动态网页转hugo静态网页并托管在GitHub上一共可以分成三步， 1.在本地建立hugo site； 2.把wordpress内容转为markdown格式并放入本地hugo site中； 3.把已经放好转出内容的hugo site 部署到GitHub上。
每步之间几乎是相互独立，互不影响。每个步骤都可以单独完成，如果想把wordpress 转hexo或者Jekyll，或者要把hugo静态网页托管在GitHub上，都可以参考此篇文章。
下面开始正文：
 在本地建立一个hugo site，参见上篇博客（基于hugo的静态博客建立及 部署在GitHub上） 这一步是花费了我最长时间的一部，因为有两个wordpress转出工具————wordpress-to-hugo-exporter和Exitwp，两个我都有尝试，但是中间都遇到了一些问题，最终我用Exitwp解决了wordpress转出问题，下面就是详细过程. 2.1. 导出word press文件：需要在wordpress/admin界面Tools-Export中把自己本来wordpress里的所有内容导出为xml文件。 2.2. 我们用Exitwp（https://github.com/thomasf/exitwp）这个工具把xml文件转为markdown文件。下载Exitwp（https://github.com/thomasf/exitwp.git），然后把所有的xml文件都放在解压了的Exitwp文件夹里的word press-xml目录下； 2.3. 进行下部之前，我们需要安装五个software，分别是 2.3.1. python 2.7 （https://www.python.org/），记得安装完之后要在环境变量-path中添加python，只有添加path之后才可以在cmd中运行python命令，否则后面几步运行会报错； 2.3.2. html2text: 把html文件转为markdown文件（python编写）（http://www.aaronsw.com/2002/html2text/）参照指示，点击download之后直接把code拷贝下来建在一个新txt文档里并命名为html2text.py就行，这里是我建好的.py文件； 2.3.3. PyYAML：Reading configuration files and writing YAML headers（python编写）（http://pyyaml.org/wiki/PyYAML）（这里是英文解释，有点难翻译，也不太懂什么意思）。下载安装包，然后直接在命令符中输入$ python setup.py install就可以了。 2.3.4. beautiful soup：运行和下载wordpress posts 中的图片（也是python编写）（https://www.crummy.com/software/BeautifulSoup/），下载4.6.0版本，然后在cmd中输入$ pip install beautifulsoup4, 运行，然后beautifulsoup4.6.0就安装在python27\lib\site-packages目录下了； 2.3.5. xmllint：xmllint是一个处理及验证xml的工。（http://xmlsoft.org/downloads.html）Linux下只要安装libxml2就可以使用了，但是在Windows下就要麻烦很多。这一步也是很烦人的一部，因为官网上的指示一点都不清楚，可能针对linux系统比较详细吧，反正Windows系统非常不详细。所以我搜了很久才找到正确安装方法（可以参考这篇文章来安装xmllinthttp://flowingmotion.jojordan.org/2011/10/08/3-steps-to-download-xmllint/） 首先找到xmllint的windows下载包（http://xmlsoft.org/sources/win32/），下载同一版本的libxml2，libxslt，iconv，zlib这四个zipfiles，解压，然后打开这四个文件bin目录，把四个bin文件里的东西全部复制到一个新的命名为bin的文件夹里，这个新的bin文件夹放在C盘下，然后将这个bin添加进环境变量path中。这样，xmllint就算是安装好了。 2.4. 在安装好了所有上述东西之后，在cmd中就最终可以输入$ xmllint &amp;hellip;xml 命令了。我的xml文件是yiyuanli.wordpress.2017-10-04.xml,所以我就直接输入$ xmllint yiyuanli.wordpress.2017-10-04.xml,然后回车运行，（可能会提示有一些错误或者转化不完整，没关系，到时候可以在已经转好的markdown文件中修改），然后在exitwp/build/jekyll中就可以找到转出来的markdown文件们了，终于大功告成！xml文件成功转为markdown！ 2.5. 把转好的markdown文件复制到本地hugo site中的content目录下，然后在cmd中hugo site目录下运行 $ hugo server &amp;ndash;theme=hugo-theme-crisp，然后网页输入localhost：1313就可以看到以前word press的post已经都移到hugo site中啦~~~ 在cmd中hugo site目录下运行$ hugo –-theme=hugo-theme-crisp –-baseUrl=“http://yiyuanli.</description>
    </item>
    
    <item>
      <title>基于hugo的静态博客建立及部署在GitHub上</title>
      <link>http://yiyuanli.github.io/site/post/%e5%9f%ba%e4%ba%8ehugo%e7%9a%84%e9%9d%99%e6%80%81%e5%8d%9a%e5%ae%a2%e5%bb%ba%e7%ab%8b%e5%8f%8a%e9%83%a8%e7%bd%b2%e5%9c%a8github%e4%b8%8a/</link>
      <pubDate>Sat, 29 Apr 2017 10:30:16 +0000</pubDate>
      
      <guid>http://yiyuanli.github.io/site/post/%e5%9f%ba%e4%ba%8ehugo%e7%9a%84%e9%9d%99%e6%80%81%e5%8d%9a%e5%ae%a2%e5%bb%ba%e7%ab%8b%e5%8f%8a%e9%83%a8%e7%bd%b2%e5%9c%a8github%e4%b8%8a/</guid>
      <description>开始之前： （这是一个非程序猿版本的hugo静态博客建立过程记录，我会尽量把每个步骤都认认真真记录下来）
作为个人博客网站，为什么选择用静态博客呢？以及为什么选择hugo作为静态博客生成器呢？可以参考如下文章：
11个最流行的静态(博客)网站生成工具
开源静态博客生成器——jekyll、hexo、hugo怎么选？
简单概括起来就是：1. 静态博客访问速度快，可以完全托管在GitHub上，不用另外花钱买主机；2. hugo生成静态博客速度非常之快，又比Jekyll构建简单许多（对于我们这些非程序猿们）。
过程记录： 敲定hugo之后，接下来就是如何用hugo建立博客的问题了：
 首先简单环境介绍： windows 10 hugo_0.20.6_windows-64bit.zip
 git的一些简单操作命令的含义见： Git远程操作详解
 安装hugo，下载地址：https://github.com/spf13/hugo/releases
  在本地磁盘上建立文件目录（路径随意）：
F:\github\hugo\bin
把下载下来的hugo.exe二进制程序放进建立的bin文件夹中。
设置系统环境变量：&amp;rdquo;我的电脑右键——属性——高级系统设置——高级——环境变量&amp;rdquo;, 选中PATH变量，&amp;rdquo;编辑——新建——F:\github\hugo\bin——确定&amp;rdquo;. 这样PATH环境变量就设置好了。
然后&amp;rdquo;win+R&amp;rdquo;打开cmd命令行，输入
$ hugo version
如果有版本提示，即表示安装成功。
接下来hugo官方网站上有非常详细的步骤及视频教学：Hugo Quickstart Guide。 照着一步一步操作。
一些补充和自己的理解：
 修改baseURL可以直接在cmd命令行中实施，输入  $ hugo &amp;ndash;theme=hyde &amp;ndash;baseUrl=&amp;ldquo;http://yiyuanli.github.io/blog&amp;quot;
2. 我在实施的过程中发现一个问题，就是在最后面regenerate site的时候，cd .. 此时应该在blog根目录下：f:\github\hugo\blog. 接着 $ hugo &amp;ndash;theme=hugo_theme_robust 来重新生成静态网页。但接下来应该进入到f:\github\hugo\blog\public 目录下
$ git add &amp;ndash;all
$ git commit -m &amp;ldquo;some changes&amp;rdquo;
$ git push origin gh-pages (-f表示 -force，见Git远程操作详解）</description>
    </item>
    
    <item>
      <title>CV sample in LaTeX</title>
      <link>http://yiyuanli.github.io/site/post/cv-sample-in-latex/</link>
      <pubDate>Fri, 13 Jan 2017 07:55:21 +0000</pubDate>
      
      <guid>http://yiyuanli.github.io/site/post/cv-sample-in-latex/</guid>
      <description>No Content Found</description>
    </item>
    
    <item>
      <title>Personal  Websites  Recommendation</title>
      <link>http://yiyuanli.github.io/site/post/personal-websites-recommendation/</link>
      <pubDate>Wed, 30 Nov 2016 13:27:04 +0000</pubDate>
      
      <guid>http://yiyuanli.github.io/site/post/personal-websites-recommendation/</guid>
      <description>No Content Found</description>
    </item>
    
    <item>
      <title>Linearity and Nonlinearity</title>
      <link>http://yiyuanli.github.io/site/post/linearity-and-nonlinearity/</link>
      <pubDate>Wed, 30 Nov 2016 12:42:56 +0000</pubDate>
      
      <guid>http://yiyuanli.github.io/site/post/linearity-and-nonlinearity/</guid>
      <description>No Content Found</description>
    </item>
    
    <item>
      <title>Asymptote Test - Drawing a Shearing Building</title>
      <link>http://yiyuanli.github.io/site/post/asymptote-test-drawing-a-shearing-building/</link>
      <pubDate>Wed, 23 Nov 2016 09:36:46 +0000</pubDate>
      
      <guid>http://yiyuanli.github.io/site/post/asymptote-test-drawing-a-shearing-building/</guid>
      <description>吼吼吼</description>
    </item>
    
    <item>
      <title>Asymptote Installation</title>
      <link>http://yiyuanli.github.io/site/post/asymptote-install/</link>
      <pubDate>Wed, 23 Nov 2016 03:09:13 +0000</pubDate>
      
      <guid>http://yiyuanli.github.io/site/post/asymptote-install/</guid>
      <description>哈哈哈哈哈哈哈哈</description>
    </item>
    
  </channel>
</rss>